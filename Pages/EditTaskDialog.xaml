<ContentDialog
    x:Class="TaskList.EditTaskDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TaskList"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:Media="using:Windows.UI.Xaml.Media"
    Title="Edit Task"
    PrimaryButtonText="Create"
    SecondaryButtonText="Cancel"
    PrimaryButtonClick="ContentDialog_PrimaryButtonClick"
    SecondaryButtonClick="ContentDialog_SecondaryButtonClick"
    DataContext="{x:Bind ViewModel}"
    Background="#3C3C40" Foreground="AliceBlue" CornerRadius="10" BorderBrush="#FF3E4D" >

    <ContentDialog.Resources>
        <local:TaskCountToStringConverter x:Key="TaskCountConverter"/>
        <local:VisibilityConverter x:Key="VisibilityConverter"/>
        <local:CompletedTaskColorConverter x:Key="CompletedTaskColorConverter"/>
        <local:CompletedTaskTextDecorationConverter x:Key="CompletedTaskTextDecorationConverter"/>
        <local:CountToVisibilityConverter x:Key="CountToVisibilityConverter"/>
        <local:DateTimeToDateTimeOffsetConverter x:Key="DateTimeToDateTimeOffsetConverter"/>

        <!-- Button Style -->
        <Style x:Key="RedBorderButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
            <Setter Property="BorderBrush" Value="Red"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <!-- Visual states here -->
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="10">
                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </ContentDialog.Resources>




    <Grid Padding="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1" Orientation="Horizontal" Spacing="10">
            <TextBlock Text="Task Type"/>
            <!--<ComboBox x:Name="Task Type" SelectedItem="{x:Bind ViewModel.TaskType, Mode=TwoWay}" Width="150"/>-->
            <TextBlock Text="{x:Bind ViewModel.TaskType, Mode=TwoWay}" Width="150" Margin="0,0,0,15"/>

        </StackPanel>

        <StackPanel x:Name="FrequencySection" Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal"
            Visibility="{x:Bind ViewModel.TaskType, Mode=TwoWay, Converter={StaticResource VisibilityConverter}, ConverterParameter=TaskRepeatHabit}">
            <TextBlock Text="Frequency"/>
            <!--ComboBox ItemsSource="{x:Bind Frequencies}" SelectedItem="{x:Bind ViewModel.Frequency, Mode=TwoWay, Converter={StaticResource FrequencyConverter}}" Margin="5,0" Width="100"/-->
        </StackPanel>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="69"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Text="Task"/>
            <TextBox Grid.Row="0" Grid.Column="1" Text="{x:Bind ViewModel.Description, Mode=TwoWay}"/>

            <TextBlock Grid.Row="1" Grid.Column="0" Text="Notes"/>
            <TextBox Grid.Row="1" Grid.Column="1" Text="{x:Bind ViewModel.Notes, Mode=TwoWay}" AcceptsReturn="True" TextWrapping="Wrap" MinHeight="50" MaxWidth="380"/>

            <TextBlock Grid.Row="2" Grid.Column="0" Text="Due Date"/>
            <DatePicker Grid.Row="2" Grid.Column="1" Date="{x:Bind ViewModel.NonNullableDateDue, Mode=TwoWay, Converter={StaticResource DateTimeToDateTimeOffsetConverter}}" 
                        MinYear="{x:Bind ViewModel.MinAllowedDate}"/>

            <TextBlock Grid.Row="3" Grid.Column="0" Text="Due Time"/>
            <TimePicker Grid.Row="3" Grid.Column="1" Time="{x:Bind ViewModel.NonNullableTimeDue, Mode=TwoWay}"/>
        </Grid>
    </Grid>

</ContentDialog>

